version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: reachinbox-backend
    environment:
      - NODE_ENV=production
      - PORT=3000
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
      - CORS_ORIGIN=http://frontend:3001,http://localhost:3001
    env_file:
      - ./backend/.env
    ports:
      - "3000:3000"
    networks:
      - email-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - backend_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://backend:3000/api
    container_name: reachinbox-frontend
    environment:
      - NODE_ENV=production
    ports:
      - "3001:80"
    networks:
      - email-network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis service (for caching and session management)
  redis:
    image: redis:7-alpine
    container_name: reachinbox-redis
    ports:
      - "6379:6379"
    networks:
      - email-network
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  email-network:
    driver: bridge

volumes:
  backend_logs:
    driver: local
  redis_data:
    driver: local
