version: '3.8'

services:
  # Elasticsearch service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: reachinbox-elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=email-aggregator
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - email-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Kibana service (optional)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: reachinbox-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    ports:
      - "5601:5601"
    networks:
      - email-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: reachinbox-backend
    environment:
      - NODE_ENV=production
      - PORT=3000
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
      - CORS_ORIGIN=http://frontend:3001,http://localhost:3001
    env_file:
      - ./backend/.env
    ports:
      - "3000:3000"
    networks:
      - email-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - backend_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://backend:3000/api
    container_name: reachinbox-frontend
    environment:
      - NODE_ENV=production
    ports:
      - "3001:80"
    networks:
      - email-network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis service (for caching and session management)
  redis:
    image: redis:7-alpine
    container_name: reachinbox-redis
    ports:
      - "6379:6379"
    networks:
      - email-network
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  email-network:
    driver: bridge

volumes:
  elasticsearch_data:
    driver: local
  backend_logs:
    driver: local
  redis_data:
    driver: local
